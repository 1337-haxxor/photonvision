{"version":3,"sources":["webpack:///./src/views/SettingsViewes/Cameras.vue?4a1b","webpack:///src/views/SettingsViewes/Cameras.vue","webpack:///./src/views/SettingsViewes/Cameras.vue?2252","webpack:///./src/views/SettingsViewes/Cameras.vue","webpack:///./src/assets/chessboard.png","webpack:///./src/components/cv-number-input.vue?7a2c","webpack:///src/components/cv-number-input.vue","webpack:///./src/components/cv-number-input.vue?616c","webpack:///./src/components/cv-number-input.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","cameraList","on","$event","handleInput","currentCameraIndex","model","value","callback","$$v","expression","cameraSettings","$set","staticStyle","sendCameraSettings","_v","stringResolutionList","resolutionIndex","squareSize","calibrationModeButton","color","checkResolution","sendCalibrationMode","_s","text","cancellationModeButton","checkCancelation","sendCalibrationFinish","$refs","calibrationFile","click","ref","snapshotAmount","_e","snack","staticRenderFns","component","VBtn","VCol","VDivider","VRow","VSnackbar","module","exports","name","staticClass","step","localValue","VTextField"],"mappings":"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","file":"js/chunk-1c4e016e.3c63bd07.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('CVselect',{attrs:{\"name\":\"Camera\",\"list\":_vm.cameraList},on:{\"input\":function($event){return _vm.handleInput('currentCamera',_vm.currentCameraIndex)}},model:{value:(_vm.currentCameraIndex),callback:function ($$v) {_vm.currentCameraIndex=$$v},expression:\"currentCameraIndex\"}}),_c('CVnumberinput',{attrs:{\"name\":\"Diagonal FOV\"},model:{value:(_vm.cameraSettings.fov),callback:function ($$v) {_vm.$set(_vm.cameraSettings, \"fov\", $$v)},expression:\"cameraSettings.fov\"}}),_c('br'),_c('CVnumberinput',{attrs:{\"name\":\"Camera pitch\",\"step\":0.01},model:{value:(_vm.cameraSettings.tilt),callback:function ($$v) {_vm.$set(_vm.cameraSettings, \"tilt\", $$v)},expression:\"cameraSettings.tilt\"}}),_c('br'),_c('v-btn',{staticStyle:{\"margin-top\":\"10px\"},attrs:{\"small\":\"\",\"color\":\"#4baf62\"},on:{\"click\":_vm.sendCameraSettings}},[_vm._v(\"Save Camera Settings\\n        \")])],1),_c('div',{staticStyle:{\"margin-top\":\"15px\"}},[_c('span',[_vm._v(\"3D Calibration\")]),_c('v-divider',{staticStyle:{\"margin-bottom\":\"10px\"},attrs:{\"color\":\"white\"}}),_c('v-row',[_c('v-col',[_c('CVselect',{attrs:{\"name\":\"Resolution\",\"list\":_vm.stringResolutionList},model:{value:(_vm.resolutionIndex),callback:function ($$v) {_vm.resolutionIndex=$$v},expression:\"resolutionIndex\"}})],1),_c('v-col',[_c('CVnumberinput',{attrs:{\"name\":\"Square Size (in)\"},model:{value:(_vm.squareSize),callback:function ($$v) {_vm.squareSize=$$v},expression:\"squareSize\"}})],1)],1),_c('v-row',[_c('v-col',[_c('v-btn',{attrs:{\"small\":\"\",\"color\":_vm.calibrationModeButton.color,\"disabled\":_vm.checkResolution},on:{\"click\":_vm.sendCalibrationMode}},[_vm._v(\"\\n                    \"+_vm._s(_vm.calibrationModeButton.text)+\"\\n                \")])],1),_c('v-col',[_c('v-btn',{attrs:{\"small\":\"\",\"color\":_vm.cancellationModeButton.color,\"disabled\":_vm.checkCancelation},on:{\"click\":_vm.sendCalibrationFinish}},[_vm._v(\"\\n                    \"+_vm._s(_vm.cancellationModeButton.text)+\"\\n                \")])],1),_c('v-col',[_c('v-btn',{attrs:{\"color\":\"whitesmoke\",\"small\":\"\"},on:{\"click\":function($event){return _vm.$refs.calibrationFile.click()}}},[_vm._v(\"\\n                    Download Checkerboard\\n                \")]),_c('a',{ref:\"calibrationFile\",staticStyle:{\"color\":\"black\",\"text-decoration\":\"none\",\"display\":\"none\"},attrs:{\"href\":require('../../assets/chessboard.png'),\"download\":\"Calibration Board.png\"}})],1)],1),(_vm.isCalibrating)?_c('v-row',[_c('v-col',[_c('span',[_vm._v(\"Snapshot Amount: \"+_vm._s(_vm.snapshotAmount))])])],1):_vm._e()],1),_c('v-snackbar',{model:{value:(_vm.snack),callback:function ($$v) {_vm.snack=$$v},expression:\"snack\"}},[_c('span',[_vm._v(\"Calibration Failed\")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div>\n            <CVselect name=\"Camera\" :list=\"cameraList\" v-model=\"currentCameraIndex\"\n                      @input=\"handleInput('currentCamera',currentCameraIndex)\"/>\n            <CVnumberinput name=\"Diagonal FOV\" v-model=\"cameraSettings.fov\"/>\n            <br>\n            <CVnumberinput name=\"Camera pitch\" v-model=\"cameraSettings.tilt\" :step=\"0.01\"/>\n            <br>\n            <v-btn style=\"margin-top:10px\" small color=\"#4baf62\" @click=\"sendCameraSettings\">Save Camera Settings\n            </v-btn>\n        </div>\n        <div style=\"margin-top: 15px\">\n            <span>3D Calibration</span>\n            <v-divider color=\"white\" style=\"margin-bottom: 10px\"/>\n            <v-row>\n                <v-col>\n                    <CVselect name=\"Resolution\" v-model=\"resolutionIndex\" :list=\"stringResolutionList\"/>\n                </v-col>\n                <v-col>\n                    <CVnumberinput name=\"Square Size (in)\" v-model=\"squareSize\"/>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col>\n                    <v-btn small :color=\"calibrationModeButton.color\" @click=\"sendCalibrationMode\"\n                           :disabled=\"checkResolution\">\n                        {{calibrationModeButton.text}}\n                    </v-btn>\n                </v-col>\n                <v-col>\n                    <v-btn small :color=\"cancellationModeButton.color\" @click=\"sendCalibrationFinish\"\n                           :disabled=\"checkCancelation\">\n                        {{cancellationModeButton.text}}\n                    </v-btn>\n                </v-col>\n                <v-col>\n                    <v-btn color=\"whitesmoke\" small @click=\"$refs.calibrationFile.click()\">\n                        Download Checkerboard\n                    </v-btn>\n                    <a ref=\"calibrationFile\" style=\"color: black; text-decoration: none; display: none\"\n                       :href=\"require('../../assets/chessboard.png')\"\n                       download=\"Calibration Board.png\"/>\n                </v-col>\n            </v-row>\n            <v-row v-if=\"isCalibrating\">\n                <v-col>\n                    <span>Snapshot Amount: {{snapshotAmount}}</span>\n                </v-col>\n            </v-row>\n        </div>\n        <v-snackbar v-model=\"snack\">\n            <span>Calibration Failed</span>\n        </v-snackbar>\n    </div>\n</template>\n\n<script>\n    import CVselect from '../../components/cv-select'\n    import CVnumberinput from '../../components/cv-number-input'\n\n    export default {\n        name: 'CameraSettings',\n        components: {\n            CVselect,\n            CVnumberinput\n        },\n        data() {\n            return {\n                isCalibrating: false,\n                resolutionIndex: undefined,\n                calibrationModeButton: {\n                    text: \"Start Calibration\",\n                    color: \"green\"\n                },\n                cancellationModeButton: {\n                    text: \"Cancel Calibration\",\n                    color: \"red\"\n                },\n                squareSize: 1.0,\n                snapshotAmount: 0,\n                hasEnough: false,\n                snack: false\n            }\n        },\n        methods: {\n            sendCameraSettings() {\n                const self = this;\n                this.axios.post(\"http://\" + this.$address + \"/api/settings/camera\", this.cameraSettings).then(\n                    function (response) {\n                        if (response.status === 200) {\n                            self.$store.state.saveBar = true;\n                        }\n                    }\n                )\n            },\n            sendCalibrationMode() {\n                const self = this;\n                let data = {};\n                let connection_string = \"/api/settings/\";\n                if (self.isCalibrating === true) {\n                    connection_string += \"snapshot\"\n                } else {\n                    connection_string += \"startCalibration\";\n                    data['resolution'] = this.filteredResolutionList[this.resolutionIndex].actualIndex;\n                    data['squareSize'] = this.squareSize;\n                    self.hasEnough = false;\n                }\n                this.axios.post(\"http://\" + this.$address + connection_string, data).then(\n                    function (response) {\n                        if (response.status === 200) {\n                            if (self.isCalibrating) {\n                                self.snapshotAmount = response.data['snapshotCount'];\n                                self.hasEnough = response.data['hasEnough'];\n                                if (self.hasEnough === true) {\n                                    self.cancellationModeButton.text = \"Finish Calibration\";\n                                    self.cancellationModeButton.color = \"green\";\n                                }\n                            } else {\n                                self.calibrationModeButton.text = \"Take Snapshot\";\n                                self.isCalibrating = true;\n                            }\n                        }\n                    }\n                );\n            },\n            sendCalibrationFinish() {\n                const self = this;\n                let connection_string = \"/api/settings/endCalibration\";\n                let data = {};\n                data['squareSize'] = this.squareSize;\n                self.axios.post(\"http://\" + this.$address + connection_string, data).then(\n                    function (response) {\n                        if (response.status === 500) {\n                            self.snack = true;\n                        }\n                        self.isCalibrating = false;\n                        self.hasEnough = false;\n                        self.snapshotAmount = 0;\n                        self.calibrationModeButton.text = \"Start Calibration\";\n                        self.cancellationModeButton.text = \"Cancel Calibration\";\n                        self.cancellationModeButton.color = \"red\";\n                    }\n                );\n            }\n        },\n        computed: {\n            checkResolution() {\n                return this.resolutionIndex === undefined;\n            },\n            checkCancelation() {\n                if (this.isCalibrating) {\n                    return false\n                } else if (this.checkResolution) {\n                    return true;\n                } else {\n                    return true\n                }\n            },\n            currentCameraIndex: {\n                get() {\n                    return this.$store.state.currentCameraIndex;\n                },\n                set(value) {\n                    this.$store.commit('currentCameraIndex', value);\n                }\n            },\n            cameraList: {\n                get() {\n                    return this.$store.state.cameraList;\n                },\n                set(value) {\n                    this.$store.commit('cameraList', value);\n                }\n            },\n            filteredResolutionList: {\n                get() {\n                    let tmp_list = [];\n                    for (let i in this.$store.state.resolutionList) {\n                        let res = JSON.parse(JSON.stringify(this.$store.state.resolutionList[i]));\n                        if (!tmp_list.some(e => e.width === res.width && e.height === res.height)) {\n                            res['actualIndex'] = parseInt(i);\n                            tmp_list.push(res);\n                        }\n                    }\n                    return tmp_list;\n                }\n            },\n            stringResolutionList: {\n                get() {\n                    let tmp = [];\n                    for (let i of this.filteredResolutionList) {\n                        tmp.push(`${i['width']} X ${i['height']}`)\n                    }\n                    return tmp\n                }\n            },\n            cameraSettings: {\n                get() {\n                    return this.$store.state.cameraSettings;\n                },\n                set(value) {\n                    this.$store.commit('cameraSettings', value);\n                }\n            },\n\n        }\n    }\n</script>\n\n<style lang=\"\" scoped>\n\n</style>","import mod from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cameras.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Cameras.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cameras.vue?vue&type=template&id=4c8198a7&scoped=true&\"\nimport script from \"./Cameras.vue?vue&type=script&lang=js&\"\nexport * from \"./Cameras.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4c8198a7\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSnackbar } from 'vuetify/lib/components/VSnackbar';\ninstallComponents(component, {VBtn,VCol,VDivider,VRow,VSnackbar})\n","module.exports = __webpack_public_path__ + \"img/chessboard.f921ac6e.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-row',{attrs:{\"dense\":\"\",\"align\":\"center\"}},[_c('v-col',{attrs:{\"cols\":2}},[_c('span',[_vm._v(_vm._s(_vm.name))])]),_c('v-col',[_c('v-text-field',{staticClass:\"mt-0 pt-0\",staticStyle:{\"width\":\"70px\"},attrs:{\"dark\":\"\",\"hide-details\":\"\",\"single-line\":\"\",\"type\":\"number\",\"step\":_vm.step},model:{value:(_vm.localValue),callback:function ($$v) {_vm.localValue=$$v},expression:\"localValue\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <v-row dense align=\"center\">\n            <v-col :cols=\"2\">\n                <span>{{name}}</span>\n            </v-col>\n            <v-col>\n                <v-text-field dark v-model=\"localValue\" class=\"mt-0 pt-0\" hide-details single-line type=\"number\"\n                              style=\"width: 70px\" :step=\"step\"/>\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'NumberInput',\n        props: ['name', 'value', 'step'],\n        data() {\n            return {}\n        },\n        computed: {\n            localValue: {\n                get() {\n                    return this.value;\n                },\n                set(value) {\n                    this.$emit('input', parseFloat(value));\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"\" scoped>\n\n</style>","import mod from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cv-number-input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cv-number-input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cv-number-input.vue?vue&type=template&id=39ab7a8e&scoped=true&\"\nimport script from \"./cv-number-input.vue?vue&type=script&lang=js&\"\nexport * from \"./cv-number-input.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"39ab7a8e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VCol,VRow,VTextField})\n"],"sourceRoot":""}